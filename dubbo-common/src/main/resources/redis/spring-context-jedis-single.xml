<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<description>Jedis Single Configuration</description>
	<!-- <context:property-placeholder
		ignore-unresolvable="true" location="classpath:redis.properties" /> -->
	<!-- Jedis 连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
	</bean>
	<!-- Jedis ConnectionFactory 数据库连接配置 -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
       	<!-- 对于普通K-V操作时，key采取String序列化策略,在 redis 端用命令好读 不然默认的序列化(JdkSerializationRedisSerializer)没办法读 -->
        <property name="keySerializer">  
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
	    </property>  
	    <property name="hashKeySerializer">  
	        <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>  
	    </property>
	</bean>
	
	<bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<!-- 构造函数注入redisTemplate -->
		<constructor-arg name="redisOperations" ref="redisTemplate"></constructor-arg>
	</bean>
</beans>