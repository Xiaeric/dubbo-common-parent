<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-4.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-4.2.xsd  
           http://www.springframework.org/schema/mvc
       	   http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd 
           http://www.springframework.org/schema/context  
           http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- 读入配置属性文件 -->
	<context:property-placeholder location="classpath:system.properties"/>
	
	<!-- 配置要扫描的包 @Component @Controller @Service @Repository-->
	<context:component-scan base-package="com.zml.web.controller" use-default-filters="false">
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 开启注解支持，默认向工厂中注册了几个Bean(@Controller @RequestMapping)，此处为context:component-scan做准备 -->
	<mvc:annotation-driven validator="validator">
		<!-- 处理@responseBody里面日期类型 -->  
		<mvc:message-converters>  
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
	            <property name="objectMapper">
	               <bean class="com.fasterxml.jackson.databind.ObjectMapper">
	                   <property name="dateFormat">
	                       <bean class="java.text.SimpleDateFormat">
	                           <constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
	                       </bean>
	                   </property>
	               </bean>
	            </property>
	            <property name="supportedMediaTypes">  
	                <list>  
	                    <value>application/json;charset=UTF-8</value>
	                    <value>text/html;charset=UTF-8</value>
	                </list>  
	            </property>    
	        </bean>  
    	</mvc:message-converters>  
    	<mvc:argument-resolvers>
    		<bean class="com.zml.common.web.bind.method.CurrentUserMethodArgumentResolver"></bean>
    	</mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加此属性则默认到使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <!-- 国际化的消息资源文件（本系统中主要用于显示/错误消息定制） -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- 在web环境中一定要定位到classpath 否则默认到当前web应用下找  -->
                <value>classpath:message/messages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="false"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>
    
    <!-- 本地化解析器 - 使用cookie存储国际化信息 -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="cookieName" value="language"/>
        <property name="cookieMaxAge" value="3600"/>
        <property name="defaultLocale" value="zh_CN"/>
    </bean>
	
	<!-- 设置本地化信息的拦截器 -->
    <mvc:interceptors>
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="language"/>
        </bean>
    </mvc:interceptors>
	
	<!--静态资源默认servlet配置
    	1、加入对静态资源的处理:js,css,gif,png
    	2、允许使用"/"做整体映射
    -->
    <!-- <mvc:default-servlet-handler/> -->
    <!-- 对静态资源文件的访问 -->  
	<!-- 所有的页面引用到css/**的资源都从css/*里面进行查找 -->
    <mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>  
    <mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>
    <mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>
	<mvc:resources mapping="/dist/**" location="/dist/" cache-period="31556926"/>
	<mvc:resources mapping="/fonts/**" location="/fonts/" cache-period="31556926"/>
	<mvc:resources mapping="/tpls/**" location="/tpls/" cache-period="31556926"/>
	
	<!--视图处理器-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html;charset=utf-8" />
        <property name="prefix" value="/WEB-INF/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
</beans>